{"version":3,"sources":["redux/client.ts","backendapi/firebase.ts","pages/AuthorizePage/AuthorizePage.tsx","backendapi/rest.ts","types/index.ts","pages/Task/Task.tsx","pages/SandboxErrorMessage/SandboxErrorMessage.tsx","pages/TaskEditDetails/TaskEditDetails.tsx","pages/TaskDetails/TaskDetails.tsx","utils/utils.ts","pages/TaskPage/TaskPage.tsx","pages/LoginPage/LoginPage.tsx","pages/RegisterPage/RegisterPage.tsx","pages/GenericNotFound/GenericNotFound.tsx","App.tsx","redux/index.ts","index.tsx"],"names":["LoginStatus","initialState","loginStatus","LOGGED_OUT","idToken","taskEditDetails","isOpen","taskId","undefined","taskDetails","produce","draft","action","type","payload","ClientActionCreators","loginInStatus","firebase","length","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getIdToken","a","firebaseUser","currentUser","Error","AuthorizePage","aria-label","className","aria-current","to","register","values","axios","post","client_name","email","client_password","withCredentials","auth","signInWithEmailAndPassword","catch","error","console","log","login","useGetTasks","id","getTasksArgs","useQuery","key","document","cookie","get","response","data","refetchOnWindowFocus","putTask","put","FilterOptions","Task","onSuccess","title","is_done","dispatch","useDispatch","useState","isHovered","setIsHovered","fade","useSpring","opacity","useMutation","delete","deleteTask","queryCache","useQueryCache","event","preventDefault","stopPropagation","invalidateQueries","onClick","onMouseEnter","e","onMouseLeave","style","fontWeight","button","icon","SandboxErrorMessage","children","color","initialValues","task_description","task_priority","due_date","Date","validationSchema","yup","required","ReactModal","setAppElement","TaskEditDetails","firstTaskRender","setFirstTaskRender","useSelector","state","client","tasks","status","usePostTask","postTask","editMode","task","find","elem","onClose","newTask","onRequestClose","enableReinitialize","onSubmit","aria-hidden","name","placeholder","component","as","field","form","meta","selected","value","onChange","date","setFieldValue","TaskDetails","cookies","Cookies","library","add","faTrash","faEdit","TaskPage","SortOptions","ACTIVE_FIRST","sortOption","setSortOption","putTasks","i","push","Promise","all","filterOption","sort","elem0","elem1","COMPLETED_FIRST","DURATION_DATE","PRIORITY","sortTasks","target","map","index","emailVerified","sendEmailVerification","then","min","LoginPage","RegisterPage","serverError","setServerError","GenericNotFound","App","preload","setPreload","useEffect","user","LOGGED_IN","set","path","setTimeout","onAuthStateChanged","exec","includes","window","location","href","history","replaceState","exact","rootReducer","combineReducers","ClientReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","RootReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.512fde53.chunk.js","sourcesContent":["import produce from 'immer';\r\n\r\n// Action Types\r\nexport const LOGIN_STATUS_UPDATED = 'LOGIN_STATUS_UPDATED';\r\nexport const ID_TOKEN_UPDATED = 'ID_TOKEN_UPDATED';\r\nexport const TASK_EDIT_DETAILS_UPDATED = 'TASK_EDIT_DETAILS_UPDATED';\r\nexport const TASK_DETAILS_UPDATED = 'TASK_DETAILS_UPDATED';\r\n\r\n// Actions Interfaces\r\nexport enum LoginStatus {\r\n  LOGGED_OUT,\r\n  LOGGED_IN,\r\n}\r\n\r\ninterface LoginStatusUpdated {\r\n  type: typeof LOGIN_STATUS_UPDATED;\r\n  payload: LoginStatus;\r\n}\r\n\r\ninterface IdTokenUpdated {\r\n  type: typeof ID_TOKEN_UPDATED;\r\n  payload: string;\r\n}\r\n\r\ninterface TaskEditDetailsUpdated {\r\n  type: typeof TASK_EDIT_DETAILS_UPDATED;\r\n  payload: {\r\n    isOpen: boolean;\r\n    taskId?: number;\r\n  };\r\n}\r\n\r\ninterface TaskDetailsUpdated {\r\n  type: typeof TASK_DETAILS_UPDATED;\r\n  payload: {\r\n    isOpen: boolean;\r\n    taskId?: number;\r\n  };\r\n}\r\n\r\nexport type ClientAction =\r\n  | LoginStatusUpdated\r\n  | IdTokenUpdated\r\n  | TaskEditDetailsUpdated\r\n  | TaskDetailsUpdated;\r\n\r\nexport interface Client {\r\n  loginStatus: LoginStatus;\r\n  idToken: string;\r\n  taskEditDetails: {\r\n    isOpen: boolean;\r\n    taskId?: number;\r\n  };\r\n  taskDetails: {\r\n    isOpen: boolean;\r\n    taskId?: number;\r\n  };\r\n}\r\n\r\nconst initialState: Client = {\r\n  loginStatus: LoginStatus.LOGGED_OUT,\r\n  idToken: '',\r\n  taskEditDetails: {\r\n    isOpen: false,\r\n    taskId: undefined,\r\n  },\r\n  taskDetails: {\r\n    isOpen: false,\r\n    taskId: undefined,\r\n  },\r\n};\r\n\r\nexport default produce((draft: Client, action: ClientAction) => {\r\n  switch (action.type) {\r\n    case LOGIN_STATUS_UPDATED:\r\n      draft.loginStatus = action.payload;\r\n      return;\r\n    case ID_TOKEN_UPDATED:\r\n      draft.idToken = action.payload;\r\n      return;\r\n    case TASK_EDIT_DETAILS_UPDATED:\r\n      draft.taskEditDetails = action.payload;\r\n      return;\r\n    case TASK_DETAILS_UPDATED:\r\n      draft.taskDetails = action.payload;\r\n    default:\r\n      return;\r\n  }\r\n}, initialState);\r\n\r\nexport const ClientActionCreators = {\r\n  loginStatusUpdated: function (\r\n    loginInStatus: LoginStatus\r\n  ): LoginStatusUpdated {\r\n    return {\r\n      type: LOGIN_STATUS_UPDATED,\r\n      payload: loginInStatus,\r\n    };\r\n  },\r\n  idTokenUpdated: function (idToken: string): IdTokenUpdated {\r\n    return {\r\n      type: ID_TOKEN_UPDATED,\r\n      payload: idToken,\r\n    };\r\n  },\r\n  // -1 for create mode | id of the task for edit mode\r\n  taskEditDetailsUpdated: function (\r\n    isOpen: boolean,\r\n    taskId?: number\r\n  ): TaskEditDetailsUpdated {\r\n    return {\r\n      type: TASK_EDIT_DETAILS_UPDATED,\r\n      payload: { isOpen, taskId },\r\n    };\r\n  },\r\n  taskDetailsUpdated: function (\r\n    isOpen: boolean,\r\n    taskId?: number\r\n  ): TaskDetailsUpdated {\r\n    return {\r\n      type: TASK_DETAILS_UPDATED,\r\n      payload: { isOpen, taskId },\r\n    };\r\n  },\r\n};\r\n","import * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBKIhgWwpaPkkvBC3hPnkVLFD77dAN3MS0',\r\n  authDomain: 'sandbox-0-9b0fb.firebaseapp.com',\r\n  databaseURL: 'https://sandbox-0-9b0fb.firebaseio.com',\r\n  projectId: 'sandbox-0-9b0fb',\r\n  storageBucket: 'sandbox-0-9b0fb.appspot.com',\r\n  messagingSenderId: '567540248172',\r\n  appId: '1:567540248172:web:b8ef6638dfb7bbe8ecf249',\r\n  measurementId: 'G-6ET7PKN5F2',\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nexport const getIdToken = async (): Promise<string> => {\r\n  const firebaseUser = firebase.auth().currentUser;\r\n\r\n  // (IF\r\n  if (firebaseUser === null) throw new Error('firebaseUser === null');\r\n  // IF)\r\n\r\n  const idToken = await firebaseUser.getIdToken();\r\n\r\n  // (IF\r\n  if (idToken === '') throw new Error(`idToken === ''`);\r\n  // IF)\r\n\r\n  return idToken;\r\n};\r\n\r\nexport { firebase };\r\n","import React, { ReactElement } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// interface Props {}\r\n\r\nfunction AuthorizePage(): ReactElement {\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Authorization Page\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <div className=\"container d-flex justify-content-center\">\r\n        <div className=\"p-2 bd-highlight\">\r\n          <NavLink to=\"/login\">\r\n            <button type=\"button\" className=\"btn btn-primary\">\r\n              Login\r\n            </button>\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"p-2 bd-highlight\">\r\n          <NavLink to=\"/register\">\r\n            <button type=\"button\" className=\"btn btn-primary\">\r\n              Register\r\n            </button>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthorizePage;\r\n","import axios from 'axios';\r\nimport {\r\n  RegisterDT,\r\n  LoginDT,\r\n  TaskDT,\r\n  GetTasksArgs,\r\n  PostTaskArgs,\r\n  PutTaskArgs,\r\n  DeleteTaskArgs,\r\n} from '../types';\r\nimport { firebase } from '../backendapi/firebase';\r\nimport { useMutation, useQuery } from 'react-query';\r\n\r\nconst backendURL = 'http://localhost:4000';\r\nconst signupRoute =\r\n  process.env.NODE_ENV === 'production' ? `/signup` : `${backendURL}/signup`;\r\nconst tasksRoute =\r\n  process.env.NODE_ENV === 'production' ? `/tasks` : `${backendURL}/tasks`;\r\n\r\nexport async function register(values: RegisterDT) {\r\n  try {\r\n    await axios.post(\r\n      signupRoute,\r\n      {\r\n        client_name: values.client_name,\r\n        email: values.email,\r\n        client_password: values.client_password,\r\n      },\r\n      { withCredentials: true }\r\n    );\r\n\r\n    await firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(values.email, values.client_password)\r\n      .catch(function (error) {\r\n        console.log('@rest/login');\r\n        throw error;\r\n      });\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function login(values: LoginDT) {\r\n  await firebase\r\n    .auth()\r\n    .signInWithEmailAndPassword(values.email, values.client_password)\r\n    .catch(function (error) {\r\n      console.log('@rest/login');\r\n      throw error;\r\n    });\r\n}\r\n\r\nexport function useGetTasks(id: string, getTasksArgs: GetTasksArgs) {\r\n  return useQuery<TaskDT[], Error>(\r\n    [id, getTasksArgs, 'GET'],\r\n    async (key): Promise<TaskDT[]> => {\r\n      try {\r\n        console.log('@/tasks');\r\n        console.log(document.cookie);\r\n        const response = await axios.get(tasksRoute, { withCredentials: true });\r\n        return response.data;\r\n      } catch (error) {\r\n        console.log('rest/useGetTasks');\r\n        throw error;\r\n      }\r\n    },\r\n    {\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n}\r\n\r\nexport function usePostTask(\r\n  onSuccess:\r\n    | ((data: TaskDT, variables: PostTaskArgs) => Promise<unknown> | void)\r\n    | undefined\r\n) {\r\n  return useMutation<TaskDT, Error, PostTaskArgs>(\r\n    async (values): Promise<TaskDT> => {\r\n      try {\r\n        const response = await axios.post(tasksRoute, values, {\r\n          withCredentials: true,\r\n        });\r\n        return response.data;\r\n      } catch (error) {\r\n        console.log('rest/usePostTask');\r\n        throw error;\r\n      }\r\n    },\r\n    {\r\n      onSuccess: onSuccess,\r\n    }\r\n  );\r\n}\r\n\r\nexport function usePutTask(\r\n  onSuccess:\r\n    | ((data: TaskDT, variables: PutTaskArgs) => Promise<unknown> | void)\r\n    | undefined\r\n) {\r\n  return useMutation<TaskDT, Error, PutTaskArgs>(\r\n    async (values): Promise<TaskDT> => {\r\n      try {\r\n        return await putTask(values);\r\n      } catch (error) {\r\n        console.log('rest/usePutTask');\r\n        throw error;\r\n      }\r\n    },\r\n    {\r\n      onSuccess: onSuccess,\r\n    }\r\n  );\r\n}\r\n\r\nexport function useDeleteTask(\r\n  onSuccess:\r\n    | ((data: TaskDT, variables: DeleteTaskArgs) => Promise<unknown> | void)\r\n    | undefined\r\n) {\r\n  return useMutation<TaskDT, Error, DeleteTaskArgs>(\r\n    async (values): Promise<TaskDT> => {\r\n      try {\r\n        const response = await axios.delete(`${tasksRoute}/${values.id}`, {\r\n          withCredentials: true,\r\n        });\r\n        return response.data;\r\n      } catch (error) {\r\n        console.log('rest/useDeleteTask');\r\n        throw error;\r\n      }\r\n    },\r\n    {\r\n      onSuccess: onSuccess,\r\n    }\r\n  );\r\n}\r\n\r\nexport async function putTask(values: TaskDT) {\r\n  const response = await axios.put(`${tasksRoute}/${values.id}`, values, {\r\n    withCredentials: true,\r\n  });\r\n  return response.data;\r\n}\r\n","/* Root Reducer Type */\r\nimport rootReducer from '../redux/index';\r\n\r\nexport type StateType = ReturnType<typeof rootReducer>;\r\n\r\n/* Server data types */\r\nexport interface ClientDT {\r\n  id: number;\r\n  client_name?: string;\r\n  email?: string;\r\n  client_password?: string;\r\n  confirmed_at?: Date;\r\n}\r\n\r\nexport interface TaskDT {\r\n  id: number;\r\n  title?: string;\r\n  task_description?: string;\r\n  is_done?: boolean;\r\n  task_priority?: number;\r\n  due_date?: Date;\r\n}\r\n\r\nexport type ServerDataType = ClientDT | TaskDT;\r\n\r\nexport const NClient = 'client';\r\nexport const NTask = 'task';\r\n\r\nexport type NamesDataType = typeof NClient | typeof NClient;\r\n\r\n/* Form Data Types */\r\nexport interface RegisterDT {\r\n  client_name: string;\r\n  email: string;\r\n  client_password: string;\r\n}\r\n\r\nexport interface LoginDT {\r\n  email: string;\r\n  client_password: string;\r\n}\r\n\r\n/* REST Queries Types */\r\nexport interface GetTasksArgs {}\r\n\r\nexport interface PostTaskArgs {\r\n  title?: string;\r\n  task_description?: string;\r\n  is_done?: boolean;\r\n  task_priority?: number;\r\n  due_date?: Date;\r\n}\r\n\r\nexport type PutTaskArgs = TaskDT;\r\n\r\nexport interface DeleteTaskArgs {\r\n  id: number;\r\n}\r\n\r\n/* */\r\n\r\nexport enum FilterOptions {\r\n  ACTIVE_FIRST = 'Active First',\r\n  COMPLETED_FIRST = 'Completed First',\r\n  DURATION_DATE = 'Duration Date',\r\n  PRIORITY = 'Priority',\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { ReactElement, useState } from 'react';\r\nimport { NTask, TaskDT } from '../../types';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { useDeleteTask } from '../../backendapi/rest';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ClientActionCreators } from '../../redux/client';\r\n\r\nimport { useQueryCache } from 'react-query';\r\n\r\nfunction Task({ id, title, is_done }: TaskDT): ReactElement {\r\n  const dispatch = useDispatch();\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const fade = useSpring({\r\n    opacity: isHovered ? 1 : 0,\r\n  });\r\n\r\n  const [deleteTask] = useDeleteTask(undefined);\r\n\r\n  const queryCache = useQueryCache();\r\n\r\n  async function onDeleteTask(\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) {\r\n    event.preventDefault();\r\n    event.stopPropagation(); // stop TaskDetails from opening\r\n\r\n    await deleteTask({ id: id });\r\n    queryCache.invalidateQueries([NTask, {}, 'GET']);\r\n  }\r\n\r\n  async function onOpenTaskEditDetails(\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) {\r\n    event.preventDefault();\r\n    event.stopPropagation(); // stop TaskDetails from opening\r\n    dispatch(ClientActionCreators.taskEditDetailsUpdated(true, id));\r\n  }\r\n\r\n  async function onOpenTaskDetails(\r\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n  ) {\r\n    event.preventDefault();\r\n\r\n    dispatch(ClientActionCreators.taskDetailsUpdated(true, id));\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"row border my-2 py-2\"\r\n      onClick={onOpenTaskDetails}\r\n      onMouseEnter={(e) => setIsHovered(true)}\r\n      onMouseLeave={(e) => setIsHovered(false)}\r\n    >\r\n      <div className=\"col-auto\">\r\n        <span style={{ fontWeight: is_done ? 'bold' : 'normal' }}>{title}</span>\r\n      </div>\r\n      <animated.button className=\"col-auto\" style={fade} onClick={onDeleteTask}>\r\n        <FontAwesomeIcon icon=\"trash\" />\r\n      </animated.button>\r\n      <animated.button\r\n        className={`col-auto mx-2`}\r\n        style={fade}\r\n        onClick={onOpenTaskEditDetails}\r\n      >\r\n        <FontAwesomeIcon icon=\"edit\" />\r\n      </animated.button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import React, { ReactElement } from 'react';\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\nfunction SandboxErrorMessage({ children }: Props): ReactElement {\r\n  return <div style={{ color: 'red' }}>{children}</div>;\r\n}\r\n\r\nexport default SandboxErrorMessage;\r\n","import { ErrorMessage, Field, FieldProps, Form, Formik } from 'formik';\r\nimport React, { ReactElement, useState } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useGetTasks, usePostTask, usePutTask } from '../../backendapi/rest';\r\nimport { ClientActionCreators } from '../../redux/client';\r\nimport { NTask, StateType, TaskDT } from '../../types';\r\nimport ReactDatePicker from 'react-datepicker';\r\nimport { useQueryCache } from 'react-query';\r\nimport * as yup from 'yup'; // for everything\r\nimport SandboxErrorMessage from '../SandboxErrorMessage/SandboxErrorMessage';\r\n\r\n// interface Props = {};\r\n\r\nlet initialValues: TaskDT = {\r\n  id: -1,\r\n  title: '',\r\n  task_description: '',\r\n  is_done: false,\r\n  task_priority: 1,\r\n  due_date: new Date(),\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  title: yup.string().required('Required'),\r\n  task_description: yup.string().required('Required'),\r\n  task_priority: yup.number().required('Requried'),\r\n  due_date: yup.date().required('Requried'),\r\n});\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nfunction TaskEditDetails(): ReactElement {\r\n  const [firstTaskRender, setFirstTaskRender] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n  const taskEditDetails = useSelector<\r\n    StateType,\r\n    { isOpen: boolean; taskId?: number }\r\n  >(\r\n    (state) =>\r\n      state.client.taskEditDetails as { isOpen: boolean; taskId?: number }\r\n  );\r\n\r\n  let { data: tasks, status, error } = useGetTasks(NTask, {});\r\n\r\n  const queryCache = useQueryCache();\r\n\r\n  const [putTask] = usePutTask(undefined);\r\n  const [postTask] = usePostTask(undefined);\r\n\r\n  if (!taskEditDetails.isOpen) {\r\n    if (!firstTaskRender) setFirstTaskRender(true);\r\n    return <></>;\r\n  }\r\n\r\n  // Check if query is still loading\r\n  if (status === 'loading') return <div>Loading...</div>;\r\n  if (error) return <div>Error!</div>;\r\n\r\n  // Editable mode. so set some default values\r\n  const editMode = taskEditDetails.taskId !== undefined;\r\n  if (editMode) {\r\n    tasks = tasks as TaskDT[];\r\n    const task = tasks.find((elem) => elem.id === taskEditDetails.taskId);\r\n    if (task !== undefined && firstTaskRender) {\r\n      initialValues = {\r\n        id: task.id,\r\n        title: task.title,\r\n        task_description: task.task_description,\r\n        is_done: task.is_done,\r\n        task_priority: task.task_priority,\r\n        due_date: task.due_date,\r\n      };\r\n      console.log('@initialValues');\r\n\r\n      console.log(initialValues);\r\n\r\n      setFirstTaskRender(false);\r\n    }\r\n  }\r\n\r\n  async function onClose(\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) {\r\n    dispatch(ClientActionCreators.taskEditDetailsUpdated(false));\r\n  }\r\n\r\n  async function onSubmitPutTaskForm(values: TaskDT) {\r\n    await putTask(values);\r\n    queryCache.invalidateQueries([NTask, {}, 'GET']);\r\n  }\r\n\r\n  async function onSubmitPostTaskForm(values: TaskDT) {\r\n    const newTask = await postTask(values);\r\n    queryCache.invalidateQueries([NTask, {}, 'GET']);\r\n    dispatch(ClientActionCreators.taskEditDetailsUpdated(true, newTask?.id));\r\n  }\r\n\r\n  return (\r\n    <ReactModal isOpen={taskEditDetails.isOpen} onRequestClose={onClose}>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        enableReinitialize={true}\r\n        validationSchema={validationSchema}\r\n        onSubmit={editMode ? onSubmitPutTaskForm : onSubmitPostTaskForm}\r\n      >\r\n        <Form>\r\n          <div className=\"container\">\r\n            <div className=\"row py-3\">\r\n              <div className=\"col d-flex justify-content-end\">\r\n                <button onClick={onClose} className=\"close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"row py-2\">\r\n              <Field\r\n                name=\"title\"\r\n                placeholder=\"Task Title\"\r\n                className=\"form-control\"\r\n              />\r\n              <ErrorMessage\r\n                component={SandboxErrorMessage as React.FunctionComponent<{}>}\r\n                name=\"title\"\r\n              />\r\n            </div>\r\n            <div className=\"row py-2\">\r\n              <Field\r\n                as=\"textarea\"\r\n                name=\"task_description\"\r\n                placeholder=\"Task Description\"\r\n                className=\"form-control\"\r\n              />\r\n              <ErrorMessage\r\n                component={SandboxErrorMessage as React.FunctionComponent<{}>}\r\n                name=\"task_description\"\r\n              />\r\n            </div>\r\n            <div className=\"row py-2\">\r\n              <label>\r\n                <Field type=\"checkbox\" name=\"is_done\" />\r\n                {` Is Done`}\r\n                <ErrorMessage\r\n                  component={SandboxErrorMessage as React.FunctionComponent<{}>}\r\n                  name=\"is_done\"\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className=\"row py-2\">\r\n              <Field\r\n                name=\"task_priority\"\r\n                placeholder=\"Task Priority\"\r\n                className=\"form-control\"\r\n              />\r\n              <ErrorMessage\r\n                component={SandboxErrorMessage as React.FunctionComponent<{}>}\r\n                name=\"task_priority\"\r\n              />\r\n            </div>\r\n            <div className=\"row py-2\">\r\n              <Field name={'due_date'}>\r\n                {({ field, form, meta }: FieldProps) => (\r\n                  <ReactDatePicker\r\n                    selected={(field.value && new Date(field.value)) || null}\r\n                    onChange={(date, event) => {\r\n                      date = date as Date;\r\n                      form.setFieldValue('due_date', date);\r\n                    }}\r\n                  />\r\n                )}\r\n              </Field>\r\n              <ErrorMessage\r\n                component={SandboxErrorMessage as React.FunctionComponent<{}>}\r\n                name=\"due_date\"\r\n              />\r\n            </div>\r\n            <div className=\"row py-2 d-flex justify-content-center\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                {editMode ? <>Save</> : <>Create</>}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n    </ReactModal>\r\n  );\r\n}\r\n\r\nexport default TaskEditDetails;\r\n","import React, { ReactElement } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useGetTasks } from '../../backendapi/rest';\r\nimport { ClientActionCreators } from '../../redux/client';\r\nimport { NTask, StateType, TaskDT } from '../../types';\r\nimport ReactModal from 'react-modal';\r\n\r\n// interface Props {}\r\n\r\nfunction TaskDetails(): ReactElement {\r\n  const dispatch = useDispatch();\r\n\r\n  const taskDetails = useSelector<\r\n    StateType,\r\n    { isOpen: boolean; taskId?: number }\r\n  >(\r\n    (state) => state.client.taskDetails as { isOpen: boolean; taskId?: number }\r\n  );\r\n\r\n  let { data: tasks, status, error } = useGetTasks(NTask, {});\r\n\r\n  if (!taskDetails.isOpen) return <></>;\r\n\r\n  // Check if query is still loading\r\n  if (status === 'loading') return <div>Loading...</div>;\r\n  if (error) return <div>Error!</div>;\r\n\r\n  if (taskDetails.taskId === undefined) {\r\n    return <>taskId must be defined!</>;\r\n  }\r\n\r\n  tasks = tasks as TaskDT[];\r\n  const task = tasks.find((elem) => elem.id === taskDetails.taskId) as TaskDT;\r\n\r\n  async function onClose(\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) {\r\n    dispatch(ClientActionCreators.taskDetailsUpdated(false));\r\n  }\r\n  return (\r\n    <ReactModal isOpen={taskDetails.isOpen} onRequestClose={onClose}>\r\n      <div className=\"container\">\r\n        <div className=\"row py-3\">\r\n          <div className=\"col d-flex justify-content-end\">\r\n            <button onClick={onClose} className=\"close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <h4 className=\"row\">{task.title}</h4>\r\n        <p className=\"row\">{task.task_description}</p>\r\n        <p className=\"row\">{task.is_done ? 'Done' : 'Active'}</p>\r\n        <p className=\"row\">{task.task_priority}</p>\r\n        <p className=\"row\">{task.due_date}</p>\r\n      </div>\r\n    </ReactModal>\r\n  );\r\n}\r\n\r\nexport default TaskDetails;\r\n","import Cookies from 'universal-cookie';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { FilterOptions, TaskDT } from '../types';\r\n\r\nexport const cookies = new Cookies();\r\n\r\nlibrary.add(faTrash, faEdit);\r\n\r\nexport function sortTasks(\r\n  tasks: TaskDT[],\r\n  filterOption: FilterOptions\r\n): TaskDT[] {\r\n  return tasks.sort((elem0, elem1) => {\r\n    switch (filterOption) {\r\n      case FilterOptions.ACTIVE_FIRST:\r\n        if (elem0.is_done === undefined) return 1;\r\n        if (elem1.is_done === undefined) return -1;\r\n\r\n        return elem0.is_done < elem1.is_done ? 1 : -1;\r\n      case FilterOptions.COMPLETED_FIRST:\r\n        if (elem0.is_done === undefined) return 1;\r\n        if (elem1.is_done === undefined) return -1;\r\n\r\n        return elem0.is_done < elem1.is_done ? -1 : 1;\r\n      case FilterOptions.DURATION_DATE:\r\n        if (elem0.due_date === undefined) return 1;\r\n        if (elem1.due_date === undefined) return -1;\r\n\r\n        return elem0.due_date < elem1.due_date ? -1 : 1;\r\n      case FilterOptions.PRIORITY:\r\n        if (elem0.task_priority === undefined) return 1;\r\n        if (elem1.task_priority === undefined) return -1;\r\n\r\n        return elem0.task_priority < elem1.task_priority ? -1 : 1;\r\n      default:\r\n        return 0;\r\n    }\r\n  });\r\n}\r\n","import React, { ReactElement, useState } from 'react';\r\nimport { putTask, useGetTasks } from '../../backendapi/rest';\r\nimport { FilterOptions as SortOptions, NTask, TaskDT } from '../../types';\r\nimport Task from '../Task/Task';\r\nimport TaskEditDetails from '../TaskEditDetails/TaskEditDetails';\r\nimport TaskDetails from '../TaskDetails/TaskDetails';\r\nimport { sortTasks } from '../../utils/utils';\r\nimport { ClientActionCreators } from '../../redux/client';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { firebase } from '../../backendapi/firebase';\r\nimport { queryCache } from 'react-query';\r\n\r\n// interface Props {}\r\n\r\nfunction TaskPage(): ReactElement {\r\n  const [sortOption, setSortOption] = useState(SortOptions.ACTIVE_FIRST);\r\n  let { data: tasks, status, error } = useGetTasks(NTask, {});\r\n  const dispatch = useDispatch();\r\n\r\n  if (status === 'loading') return <div>Loading...</div>;\r\n  if (error) return <div>Error!</div>;\r\n\r\n  tasks = tasks as TaskDT[];\r\n\r\n  sortTasks(tasks, sortOption);\r\n\r\n  async function onMarkAllUnDone(\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) {\r\n    event.preventDefault();\r\n\r\n    if (tasks === undefined) return;\r\n\r\n    const putTasks = [];\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      const task = tasks[i];\r\n      putTasks.push(\r\n        putTask({\r\n          id: task.id,\r\n          is_done: false,\r\n        })\r\n      );\r\n    }\r\n\r\n    await Promise.all(putTasks);\r\n\r\n    queryCache.invalidateQueries([NTask, {}, 'GET']);\r\n  }\r\n\r\n  async function onMarkAllDone(\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) {\r\n    event.preventDefault();\r\n\r\n    if (tasks === undefined) return;\r\n\r\n    const putTasks = [];\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      const task = tasks[i];\r\n      putTasks.push(\r\n        putTask({\r\n          id: task.id,\r\n          is_done: true,\r\n        })\r\n      );\r\n    }\r\n\r\n    await Promise.all(putTasks);\r\n\r\n    queryCache.invalidateQueries([NTask, {}, 'GET']);\r\n  }\r\n\r\n  async function onOpenTaskCreateDetails(\r\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) {\r\n    event.preventDefault();\r\n    dispatch(ClientActionCreators.taskEditDetailsUpdated(true, undefined));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-4\">\r\n        <div className=\"row\">\r\n          <button className=\"btn btn-primary\" onClick={onOpenTaskCreateDetails}>\r\n            Create a task\r\n          </button>\r\n\r\n          <div className=\"form-group\">\r\n            <select\r\n              className=\"form-control\"\r\n              id=\"sel1\"\r\n              onChange={(e) => {\r\n                switch (e.target.value) {\r\n                  case SortOptions.COMPLETED_FIRST:\r\n                    setSortOption(SortOptions.COMPLETED_FIRST);\r\n                    break;\r\n                  case SortOptions.DURATION_DATE:\r\n                    setSortOption(SortOptions.DURATION_DATE);\r\n                    break;\r\n                  case SortOptions.PRIORITY:\r\n                    setSortOption(SortOptions.PRIORITY);\r\n                    break;\r\n                  default:\r\n                    setSortOption(SortOptions.ACTIVE_FIRST);\r\n                    break;\r\n                }\r\n              }}\r\n            >\r\n              <option>{SortOptions.ACTIVE_FIRST}</option>\r\n              <option>{SortOptions.COMPLETED_FIRST}</option>\r\n              <option>{SortOptions.DURATION_DATE}</option>\r\n              <option>{SortOptions.PRIORITY}</option>\r\n            </select>\r\n          </div>\r\n\r\n          <button className=\"btn btn-primary\" onClick={onMarkAllDone}>\r\n            Mark all as Done\r\n          </button>\r\n          <button className=\"btn btn-primary\" onClick={onMarkAllUnDone}>\r\n            Mark all as Undone\r\n          </button>\r\n        </div>\r\n        {tasks.map((task, index) => {\r\n          return (\r\n            <Task\r\n              key={task.id}\r\n              id={task.id}\r\n              title={task.title}\r\n              is_done={task.is_done}\r\n            />\r\n          );\r\n        })}\r\n        <div className=\"row my-4 d-flex justify-content-center\">\r\n          {firebase.auth().currentUser?.emailVerified || (\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={(e) => {\r\n                firebase\r\n                  .auth()\r\n                  .currentUser?.sendEmailVerification()\r\n                  .then(function () {})\r\n                  .catch(function (error) {\r\n                    console.log('pages/TaskPage/Email Verification');\r\n                    throw error;\r\n                  });\r\n              }}\r\n            >\r\n              Verify Email\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <TaskEditDetails />\r\n      <TaskDetails />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskPage;\r\n","import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React, { ReactElement } from 'react';\r\nimport { login } from '../../backendapi/rest';\r\nimport { LoginDT } from '../../types';\r\nimport * as yup from 'yup'; // for everything\r\nimport SandboxErrorMessage from '../SandboxErrorMessage/SandboxErrorMessage';\r\n\r\nconst initialValues: LoginDT = {\r\n  email: '',\r\n  client_password: '',\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup.string().email('Invalid Email').required('Required'),\r\n  client_password: yup\r\n    .string()\r\n    .min(6, 'Password must be at least 6 characters long')\r\n    .required('Required'),\r\n});\r\n\r\n// interface Props {}\r\n\r\nfunction LoginPage(): ReactElement {\r\n  async function onSubmitLoginForm(values: LoginDT) {\r\n    login(values);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmitLoginForm}\r\n      >\r\n        <Form>\r\n          <div className=\"container\">\r\n            <div className=\"row py-2\">\r\n              <div className=\"col-md-12\">\r\n                <Field\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email Address\"\r\n                  className=\"form-control\"\r\n                />\r\n                <ErrorMessage\r\n                  component={SandboxErrorMessage as React.FunctionComponent<{}>}\r\n                  name=\"email\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row py-2\">\r\n              <div className=\"col-md-12\">\r\n                <Field\r\n                  type=\"password\"\r\n                  name=\"client_password\"\r\n                  placeholder=\"Password\"\r\n                  className=\"form-control\"\r\n                />\r\n                <ErrorMessage\r\n                  component={SandboxErrorMessage as React.FunctionComponent<{}>}\r\n                  name=\"client_password\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row py-2\">\r\n              <div className=\"col-md-12 d-flex justify-content-center p-2\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport React, { ReactElement, useState } from 'react';\r\nimport { register } from '../../backendapi/rest';\r\nimport { RegisterDT } from '../../types/';\r\nimport * as yup from 'yup'; // for everything\r\nimport SandboxErrorMessage from '../SandboxErrorMessage/SandboxErrorMessage';\r\n\r\nconst initialValues: RegisterDT = {\r\n  client_name: '',\r\n  email: '',\r\n  client_password: '',\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  client_name: yup.string().required('Required'),\r\n  email: yup.string().email('Invalid Email').required('Required'),\r\n  client_password: yup\r\n    .string()\r\n    .min(6, 'Password must be at least 6 characters long')\r\n    .required('Requried'),\r\n});\r\n\r\n// interface Props {}\r\n\r\nfunction RegisterPage(): ReactElement {\r\n  const [serverError, setServerError] = useState('');\r\n\r\n  async function onSubmitRegisterForm(values: RegisterDT) {\r\n    try {\r\n      await register(values);\r\n    } catch (error) {\r\n      if (error.response.data === 'client_name must be unique') {\r\n        setServerError('This username is already taken');\r\n      } else if (error.response.data === 'email must be unique') {\r\n        setServerError('This email is already taken');\r\n      } else {\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmitRegisterForm}\r\n      >\r\n        <Form>\r\n          <div className=\"container\">\r\n            <div className=\"row py-2\">\r\n              <div className=\"col-md-12\">\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"client_name\"\r\n                  placeholder=\"Full Name\"\r\n                  className=\"form-control\"\r\n                />\r\n                <ErrorMessage\r\n                  component={SandboxErrorMessage as React.FunctionComponent<{}>}\r\n                  name=\"client_name\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row py-2\">\r\n              <div className=\"col-md-12\">\r\n                <Field\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email Address\"\r\n                  className=\"form-control\"\r\n                />\r\n                <ErrorMessage\r\n                  component={SandboxErrorMessage as React.FunctionComponent<{}>}\r\n                  name=\"email\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row py-2\">\r\n              <div className=\"col-md-12\">\r\n                <Field\r\n                  type=\"password\"\r\n                  name=\"client_password\"\r\n                  placeholder=\"Password\"\r\n                  className=\"form-control\"\r\n                />\r\n                <ErrorMessage\r\n                  component={SandboxErrorMessage as React.FunctionComponent<{}>}\r\n                  name=\"client_password\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <SandboxErrorMessage>{serverError}</SandboxErrorMessage>\r\n            <div className=\"row py-2\">\r\n              <div className=\"col-md-12 d-flex justify-content-center p-2\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Register\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React, { ReactElement } from 'react';\r\n\r\ninterface Props {}\r\n\r\nfunction GenericNotFound({}: Props): ReactElement {\r\n  return <h1>This page is not found</h1>;\r\n}\r\n\r\nexport default GenericNotFound;\r\n","import React, { useEffect, useState } from 'react';\nimport { ClientActionCreators, LoginStatus } from './redux/client';\nimport { StateType } from './types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { firebase, getIdToken } from './backendapi/firebase';\nimport AuthorizePage from './pages/AuthorizePage/AuthorizePage';\nimport TaskPage from './pages/TaskPage/TaskPage';\nimport { cookies } from './utils/utils';\nimport { Route, Switch } from 'react-router';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport RegisterPage from './pages/RegisterPage/RegisterPage';\nimport GenericNotFound from './pages/GenericNotFound/GenericNotFound';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [preload, setPreload] = useState(true);\n\n  const idToken = useSelector<StateType, string>(\n    (state) => state.client.idToken as string\n  );\n\n  const loginStatus = useSelector<StateType, LoginStatus>(\n    (state) => state.client.loginStatus as LoginStatus\n  );\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      exec(user);\n    });\n\n    async function exec(user: firebase.User | null) {\n      try {\n        setPreload(false);\n\n        // if user isn't null then we logged in\n        if (user) {\n          dispatch(\n            ClientActionCreators.loginStatusUpdated(LoginStatus.LOGGED_IN)\n          );\n\n          const idToken = await getIdToken();\n          dispatch(ClientActionCreators.idTokenUpdated(idToken));\n          cookies.set('idToken', idToken, { path: '/' });\n        } else {\n          dispatch(\n            ClientActionCreators.loginStatusUpdated(LoginStatus.LOGGED_OUT)\n          );\n        }\n      } catch (error) {\n        console.log('App/useEffect');\n        console.log(error);\n      }\n\n      // Make idToken refresh every half an hour\n      setTimeout(() => {\n        getIdToken()\n          .then((idToken) => {\n            dispatch(ClientActionCreators.idTokenUpdated(idToken));\n          })\n          .catch((error) => {\n            console.log('App/useEffect/setTimeout');\n            console.log(error);\n          });\n      }, 30 * 60 * 1000);\n    }\n  }, []);\n\n  // Before firebase defines wether user is loggedin or not, just return empty page\n  if (preload) return <></>;\n\n  if (loginStatus === LoginStatus.LOGGED_IN && idToken !== '') {\n    // User is logged in and ready to work with backend\n    if (['/login', '/register'].includes(window.location.href)) {\n      console.log('@window.location.href');\n      console.log(window.location.href);\n      window.history.replaceState('', 'Task Manager', '/');\n    }\n\n    return (\n      <Switch>\n        <Route path=\"/\" exact component={TaskPage} />\n        <Route path=\"/login\" exact component={TaskPage} />\n        <Route path=\"/register\" exact component={TaskPage} />\n        <Route component={GenericNotFound} />\n      </Switch>\n    );\n  } else {\n    // User is logged out / logged in but doesnt have idToken yet\n    return (\n      <Switch>\n        <Route path=\"/\" exact component={AuthorizePage} />\n        <Route path=\"/login\" exact component={LoginPage} />\n        <Route path=\"/register\" exact component={RegisterPage} />\n        <Route component={GenericNotFound} />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\n\r\nimport ClientReducer from './client';\r\n\r\nexport const rootReducer = combineReducers({\r\n  client: ClientReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { firebase } from './backendapi/firebase';\n\n// Importing CSS Styles\nimport './utils/global/global.scss';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport './utils/utils';\n\n// --- Importing Redux\nimport { createStore, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport RootReducer from './redux/';\n\n// Importing React Query Dev Tools\nimport { ReactQueryDevtools } from 'react-query-devtools';\n\n// Importing react-router-dom\nimport { BrowserRouter } from 'react-router-dom';\n\n// --- Setting up Redux & Redux Dev Tools\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(RootReducer, composeEnhancers());\n\n// firebase.auth().signOut();\n\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <React.StrictMode>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </React.StrictMode>\n    </Provider>\n    <ReactQueryDevtools />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}